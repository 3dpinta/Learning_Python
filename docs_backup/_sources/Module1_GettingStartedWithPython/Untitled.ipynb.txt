{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Informal Introduction to Python"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The Python Console\n",
    "It is slow to tinker with Python code by writing a script and then executing it. Instead, a simple way to try out Python is to open a Python \"console\" in your terminal. To do so, open your computer's terminal (cmd.exe in Windows) and simply type: python. You should see something like the following in the your terminal:\n",
    "\n",
    "![Python console example](attachments/PythonShellClip.PNG)\n",
    "\n",
    "You can run any Python command here. Try typing `print(\"Hello World\")` into the console (and then hit `RETURN/ENTER`). You will see `Hello World` print to your terminal. You just executed some Python code! A console session has \"memory\" of the commands that you type. For instance, if you run the line of code `x = 5` in the console, then the variable `x` will reference the value 5 until you close this console session (or you delete or reassign `x`). \n",
    "\n",
    "\n",
    "Exit the Python shell by executing the command `exit()`. The Python console is a simple but valuable tool, that would come with Python even if you didn't install Python via Anaconda. There is, however, a far-superior console that comes with the Anaconda distibution of packages that you installed, called IPython."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
