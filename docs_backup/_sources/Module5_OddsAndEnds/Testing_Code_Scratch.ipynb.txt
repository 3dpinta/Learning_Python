{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "def test_count_vowels_basic():\n",
    "    assert count_vowels(\"aA bB yY\", include_y=False) == 2\n",
    "    assert count_vowels(\"aA bB yY\", include_y=True) == 4\n",
    "    assert count_vowels(\"\", include_y=True) == 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "def count_vowels(x: str, include_y: bool = False) -> int:\n",
    "    \"\"\"Returns the number of vowels contained in `x`\n",
    "\n",
    "    Examples\n",
    "    --------\n",
    "    >>> count_vowels(\"happy\")\n",
    "    1\n",
    "    >>> count_vowels(\"happy\", include_y=True)\n",
    "    2\n",
    "    \"\"\"\n",
    "    vowels = set(\"aeiouAEIOU\")\n",
    "    if include_y:\n",
    "        vowels.update(\"yY\")\n",
    "    return sum(1 for char in x if char in vowels)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "count_vowels(\"happy\", include_y=)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    ">>> assert 0 in [1, 2, 3], \"0 is not in the list\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "a_list =[]\n",
    "a_number = 22\n",
    "a_string = \"abcdef\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "assert count_vowels(a_string) < a_number, f\"Number of vowels in `a_string`, {count_vowels(a_string)} exceeds {a_number}\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "ename": "AssertionError",
     "evalue": "Number of vowels, 2, exceeds 22",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAssertionError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-6-51c17da13eaa>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[1;32massert\u001b[0m \u001b[0mcount_vowels\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0ma_string\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m<\u001b[0m \u001b[0ma_number\u001b[0m\u001b[1;33m/\u001b[0m\u001b[1;36m100\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34mf\"Number of vowels, {count_vowels(a_string)}, exceeds {a_number}\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mAssertionError\u001b[0m: Number of vowels, 2, exceeds 22"
     ]
    }
   ],
   "source": [
    "assert count_vowels(a_string) < a_number/100, f\"Number of vowels, {count_vowels(a_string)}, exceeds {a_number}\""
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:.conda-jupy] *",
   "language": "python",
   "name": "conda-env-.conda-jupy-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
